{"ast":null,"code":"import _objectSpread from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jonaed/app/app/src/App.js\";\nimport React, { Component } from \"react\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.countUpdate = function (event) {\n      console.log(event.currentTarget.value); // update that count\n\n      ++event.currentTarget.value; // 1. take a copy of state\n\n      var updatedcount = _objectSpread({}, _this.state.planets, {\n        count: event.currentTarget.value\n      });\n\n      console.log(updatedcount); // 2. \n    };\n\n    _this.counterButtons = function () {\n      console.log(\"this is just a simple button\");\n    };\n\n    _this.state = {\n      planets: {\n        moon: [{\n          name: \"Jonaed\",\n          count: 0\n        }, {\n          name: \"Ashik\",\n          count: 0\n        }],\n        sun: [{\n          name: \"Mission\",\n          count: 0\n        }, {\n          name: \"Bayjid\",\n          count: 0\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var planets = this.state.planets;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, Object.keys(planets).map(function (planet) {\n        return React.createElement(\"div\", {\n          key: planet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, planet, React.createElement(\"ul\", {\n          key: planet.person,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, planets[planet].map(function (person) {\n          return React.createElement(\"li\", {\n            key: person.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: _this2.countUpdate,\n            value: person.count,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, person.name, \":\", person.count));\n        })));\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jonaed/app/app/src/App.js"],"names":["React","Component","App","props","countUpdate","event","console","log","currentTarget","value","updatedcount","state","planets","count","counterButtons","moon","name","sun","Object","keys","map","planet","person"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,G;;;;;AAYJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAXnBC,WAWmB,GAXL,UAACC,KAAD,EAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBC,KAAhC,EADuB,CAEvB;;AACA,QAAEJ,KAAK,CAACG,aAAN,CAAoBC,KAAtB,CAHuB,CAIvB;;AACA,UAAMC,YAAY,qBACb,MAAKC,KAAL,CAAWC,OADE;AAEhBC,QAAAA,KAAK,EAAER,KAAK,CAACG,aAAN,CAAoBC;AAFX,QAAlB;;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ,EARuB,CASvB;AACD,KACkB;;AAAA,UASnBI,cATmB,GASF,YAAM;AACrBR,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KAXkB;;AAEjB,UAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPG,QAAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE,QAAR;AAAkBH,UAAAA,KAAK,EAAE;AAAzB,SAAD,EAA+B;AAAEG,UAAAA,IAAI,EAAE,OAAR;AAAiBH,UAAAA,KAAK,EAAE;AAAxB,SAA/B,CADC;AAEPI,QAAAA,GAAG,EAAE,CAAC;AAAED,UAAAA,IAAI,EAAE,SAAR;AAAmBH,UAAAA,KAAK,EAAE;AAA1B,SAAD,EAAgC;AAAEG,UAAAA,IAAI,EAAE,QAAR;AAAkBH,UAAAA,KAAK,EAAE;AAAzB,SAAhC;AAFE;AADE,KAAb;AAFiB;AAQlB;;;;6BAIQ;AAAA;;AAAA,UACCD,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGM,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqBQ,GAArB,CAAyB,UAAAC,MAAM;AAAA,eAC9B;AAAK,UAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCA,MADD,EAEA;AAAI,UAAA,GAAG,EAAEA,MAAM,CAACC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGV,OAAO,CAACS,MAAD,CAAP,CAAgBD,GAAhB,CAAoB,UAAAE,MAAM;AAAA,iBACzB;AAAI,YAAA,GAAG,EAAEA,MAAM,CAACN,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAQ,YAAA,OAAO,EAAE,MAAI,CAACZ,WAAtB;AAAmC,YAAA,KAAK,EAAEkB,MAAM,CAACT,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyDS,MAAM,CAACN,IAAhE,OAAuEM,MAAM,CAACT,KAA9E,CAAtB,CADyB;AAAA,SAA1B,CADH,CAFA,CAD8B;AAAA,OAA/B,CADH,CADF;AAcD;;;;EAxCeZ,S;;AA2ClB,eAAeC,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass App extends Component {\n  countUpdate = (event) => {\n    console.log(event.currentTarget.value);\n    // update that count\n    ++event.currentTarget.value;\n    // 1. take a copy of state\n    const updatedcount = { \n      ...this.state.planets,\n      count: event.currentTarget.value}\n    console.log(updatedcount);\n    // 2. \n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: {\n        moon: [{ name: \"Jonaed\", count: 0 }, { name: \"Ashik\", count: 0 }],\n        sun: [{ name: \"Mission\", count: 0 }, { name: \"Bayjid\", count: 0 }]\n      }\n    };\n  }\n  counterButtons = () => {\n    console.log(\"this is just a simple button\");\n  };\n  render() {\n    const { planets } = this.state;\n    return (\n      <div className=\"App\">\n        {Object.keys(planets).map(planet => (\n          <div key={planet}>\n          {planet}\n          <ul key={planet.person}>\n            {planets[planet].map(person => (\n              <li key={person.name}><button onClick={this.countUpdate} value={person.count}>{person.name}:{person.count}</button></li>\n            ))}\n          </ul>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}