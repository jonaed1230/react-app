{"ast":null,"code":"import _readOnlyError from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _objectSpread from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jonaed/app/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jonaed/app/app/src/App.js\";\nimport React, { Component } from \"react\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.countUpdate = function (event) {\n      console.log(event.currentTarget.value); // update that count\n      // 1. take a copy of state\n\n      var updatedcount = _objectSpread({}, _this.state.planets.planet.count, {\n        count: event.currentTarget.value\n      });\n\n      console.log(updatedcount); // 2. update the value\n\n      ++event.currentTarget.value; // 3. set the updated object to state\n\n      _this.setState({\n        updatedcount: updatedcount\n      });\n    };\n\n    _this.counterButtons = function () {\n      console.log(\"this is just a simple button\");\n    };\n\n    _this.state = {\n      planets: {\n        moon: [{\n          name: \"Jonaed\",\n          count: 0\n        }, {\n          name: \"Ashik\",\n          count: 0\n        }],\n        sun: [{\n          name: \"Mission\",\n          count: 0\n        }, {\n          name: \"Bayjid\",\n          count: 0\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var planets = this.state.planets;\n      var planet = planets.map(function (p) {\n        return planets.p;\n      });\n      var person = planet.map(function (e) {\n        return planet[e];\n      });\n      person = (_readOnlyError(\"person\"), this.props);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, Object.keys(planets).map(function (planet) {\n        return React.createElement(\"div\", {\n          key: planet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, planet, React.createElement(\"ul\", {\n          key: planet.person,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, planets[planet].map(function (person) {\n          return React.createElement(\"li\", {\n            key: person.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: _this2.countUpdate,\n            value: person.count,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, person.name, \":\", person.count));\n        })));\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jonaed/app/app/src/App.js"],"names":["React","Component","App","props","countUpdate","event","console","log","currentTarget","value","updatedcount","state","planets","planet","count","setState","counterButtons","moon","name","sun","map","p","person","e","Object","keys"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,G;;;;;AAcJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAbnBC,WAamB,GAbL,UAACC,KAAD,EAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBC,KAAhC,EADuB,CAEvB;AACA;;AACA,UAAMC,YAAY,qBACb,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA0BC,KADb;AAEhBA,QAAAA,KAAK,EAAET,KAAK,CAACG,aAAN,CAAoBC;AAFX,QAAlB;;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ,EAPuB,CAQvB;;AACA,QAAEL,KAAK,CAACG,aAAN,CAAoBC,KAAtB,CATuB,CAUvB;;AACA,YAAKM,QAAL,CAAc;AAACL,QAAAA,YAAY,EAAZA;AAAD,OAAd;AACD,KACkB;;AAAA,UASnBM,cATmB,GASF,YAAM;AACrBV,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KAXkB;;AAEjB,UAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPK,QAAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE,QAAR;AAAkBJ,UAAAA,KAAK,EAAE;AAAzB,SAAD,EAA+B;AAAEI,UAAAA,IAAI,EAAE,OAAR;AAAiBJ,UAAAA,KAAK,EAAE;AAAxB,SAA/B,CADC;AAEPK,QAAAA,GAAG,EAAE,CAAC;AAAED,UAAAA,IAAI,EAAE,SAAR;AAAmBJ,UAAAA,KAAK,EAAE;AAA1B,SAAD,EAAgC;AAAEI,UAAAA,IAAI,EAAE,QAAR;AAAkBJ,UAAAA,KAAK,EAAE;AAAzB,SAAhC;AAFE;AADE,KAAb;AAFiB;AAQlB;;;;6BAIQ;AAAA;;AAAA,UACCF,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,UAAMC,MAAM,GAAGD,OAAO,CAACQ,GAAR,CAAY,UAAAC,CAAC;AAAA,eAC1BT,OAAO,CAACS,CADkB;AAAA,OAAb,CAAf;AAGA,UAAMC,MAAM,GAAGT,MAAM,CAACO,GAAP,CAAW,UAAAG,CAAC;AAAA,eACvBV,MAAM,CAACU,CAAD,CADiB;AAAA,OAAZ,CAAf;AAGAD,MAAAA,MAAM,8BAAG,KAAKnB,KAAR,CAAN;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGqB,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBQ,GAArB,CAAyB,UAAAP,MAAM;AAAA,eAC9B;AAAK,UAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCA,MADD,EAEA;AAAI,UAAA,GAAG,EAAEA,MAAM,CAACS,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGV,OAAO,CAACC,MAAD,CAAP,CAAgBO,GAAhB,CAAoB,UAAAE,MAAM;AAAA,iBACzB;AAAI,YAAA,GAAG,EAAEA,MAAM,CAACJ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAQ,YAAA,OAAO,EAAE,MAAI,CAACd,WAAtB;AAAmC,YAAA,KAAK,EAAEkB,MAAM,CAACR,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyDQ,MAAM,CAACJ,IAAhE,OAAuEI,MAAM,CAACR,KAA9E,CAAtB,CADyB;AAAA,SAA1B,CADH,CAFA,CAD8B;AAAA,OAA/B,CADH,CADF;AAcD;;;;EAjDeb,S;;AAoDlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass App extends Component {\n  countUpdate = (event) => {\n    console.log(event.currentTarget.value);\n    // update that count\n    // 1. take a copy of state\n    const updatedcount = { \n      ...this.state.planets.planet.count,\n      count: event.currentTarget.value}\n    console.log(updatedcount);\n    // 2. update the value\n    ++event.currentTarget.value;\n    // 3. set the updated object to state\n    this.setState({updatedcount});\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: {\n        moon: [{ name: \"Jonaed\", count: 0 }, { name: \"Ashik\", count: 0 }],\n        sun: [{ name: \"Mission\", count: 0 }, { name: \"Bayjid\", count: 0 }]\n      }\n    };\n  };\n  counterButtons = () => {\n    console.log(\"this is just a simple button\");\n  };\n  render() {\n    const { planets } = this.state;\n    const planet = planets.map(p => (\n      planets.p\n    ));\n    const person = planet.map(e => (\n        planet[e]\n    ));\n    person = this.props;\n    return (\n      <div className=\"App\">\n        {Object.keys(planets).map(planet => (\n          <div key={planet}>\n          {planet}\n          <ul key={planet.person}>\n            {planets[planet].map(person => (\n              <li key={person.name}><button onClick={this.countUpdate} value={person.count}>{person.name}:{person.count}</button></li>\n            ))}\n          </ul>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}